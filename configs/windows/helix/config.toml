# :config-open

# backup
# cp C:\Users\ra\AppData\Roaming\helix\config.toml C:\Users\ra\my-stuff\repos\my-programming-stuff\configs\windows\helix\

# default config:
# https://github.com/helix-editor/helix/issues/1210

# started with a copy of this one
# https://github.com/eichiarakaki/helix/blob/main/config.toml
# then merged this one
# https://github.com/clo4/dotfiles/blob/main/dot_config/helix/config.toml

theme = "boo berry"


# re-map some keys
# only add a new keybinding when you *frequently* perform the actions, not because you think it would be 'nice' or 'useful'
[keys.normal]
C-s = ":w" # Maps the Ctrl-s to the typable command :w which is an alias for :write (save file)
C-q = ":q"
C-A-q = ":q!"
# TODO: missing save position to jump-list
# C-h = "move_prev_word_end"
# C-l = "move_next_word_start"
C-a = "select_all"
C-c = "yank_joined_to_clipboard" # default was toggle_comments
"C-/" = "toggle_comments"
C-v = "paste_clipboard_after"


# these are the defaults:
# C-b = "page_up" # in z/view
# C-f = "page_down" # in z/view
# "C-u" = "half_page_up"
# "C-d" = "half_page_down"
# "C-i" = "jump_forward"
# "C-o" = "jump_backward"


C-j = "page_down" # C-f, C-d
C-k = "page_up" # C-b, C-u
C-h = "goto_first_nonwhitespace" # gh
# TODO: figure this conflict out
# C-l = "goto_line_end" # gl; C-l = ["collapse_selection", "select_mode", "goto_line_end", "delete_selection"]
# i think C-l is also somehow used for deleting the rest of a line

# view/split/pane movement
C-S-h = "jump_view_left"
C-S-j = "jump_view_down"
C-S-k = "jump_view_up"
C-S-l = "jump_view_right"

# buffer shortcuts are missing??
# NOTE: control+shift commonly used by windows terminal. TODO: better to change all windows terminal shortcuts to alt and alt-shift for consistency
C-S-A-h = ":new" # h is further away/less commonly used command; TODO: change to buffer-new
C-S-A-j = ":buffer-next" # jk to move through
C-S-A-k = ":buffer-previous"
C-S-A-l = ":buffer-close" # more commonly used than new buffer
# C-S-A-l = ":buffer-close!"

# left = ":buffer-previous" # bp (alias)
# right = ":buffer-next" # bn
# down = ":buffer-close" # bc; vs keep for navigating up and down
# up = ":new" # n


# terminal view/pan handled by terminal
# C-j = add a split below
# C-l = add a splot to the right
# "C--" = default for windows terminal/vscode
# "C-+" = default for windows terminal/vscode

# A-hjkl # my keymaps
# C-left/down/up/right # default for windows terminal

# re-size split/pane
# A-S-hjkl


C-r = ":reload" # Reload the current document from disk
A-f = ":format"

# select within the line bounds, useful for quick whole-line changes
X = ["goto_first_nonwhitespace", "select_mode", "goto_line_end", "normal_mode"]

# change everything from the cursor to the end of the line
A-l = ["collapse_selection", "select_mode", "goto_line_end", "change_selection"]

# delete from cursor to line end
C-l = ["collapse_selection", "select_mode", "goto_line_end", "delete_selection"]


[keys.insert]
C-space = "completion"
j = { k = "normal_mode" } # Maps `jk` to quickly exit insert mode, as opposed to esc/caps-lock; TODO: testing
C-left = "move_prev_word_start"
C-right = "move_next_word_end"


[keys.normal.space]
d = ":buffer-close"

[keys.normal.m]
a = "surround_add" # default was s
o = "select_textobject_around" # o for outside; default was a for around

# set-option softwrap.enable

[editor]
line-number = "relative"

# TODO: testing
completion-trigger-len = 1
cursorline = true
color-modes = true
true-color = true
bufferline = "multiple"

[editor.cursor-shape]
# normal = "block"
insert = "bar"
select = "underline"

[editor.soft-wrap]
enable = true

[editor.statusline]
# same as defaults but neatly aligned
left = ["mode", "spinner"]
center = ["file-name", "diagnostics", "workspace-diagnostics"]
right = ["selections", "position-percentage"]
separator = "│"
mode.normal = "normal" # "NOR" by default
mode.insert = "INSERT"
mode.select = "SELECT"

[editor.whitespace.render]
newline = "all"

[editor.whitespace.characters]
newline = "↵"

[editor.indent-guides]
render = true
character = "┊" # Some characters that work well: ▏ ┆ ┊ ⸽ ╎
#skip-levels = 1

[editor.auto-pairs]
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'
'`' = '`'
'<' = '>'


[editor.file-picker]
hidden = false
parents = false # rid \. and \..

[editor.lsp]
display-messages = true
auto-signature-help = true
display-signature-help-docs = true


