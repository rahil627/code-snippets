# haxe cookbook study

## generics
class Value<T> {
  public var value:T;
  
  public function new(value:T) {
    this.value = value;
  }
}

// Create a new Value Int instance
var myIntValue = new Value<Int>(5);

// Create a new Value String instance
var myStringValue = new Value<String>("String");



## inline constructor
class myPoint {
x; y;
public inline function new(x, y) { this.x = x; this.y = y}
}

outputs:
var myPoint_x = 100;
var myPoint_y = 150;

no allocation

Quite useful with eg matrix/vector operations because then the compiler can do a lot more optimizations.
(And you won't get extra allocations for temporary matrices.)




