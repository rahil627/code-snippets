
all OSs / terminal emulators:
  - generally: a *ton* of features over an actual basic terminal: GPU rendering (OpenGL)



# terminal multiplexers:
wezterm
  - a terminal first, with built-in tmux features
    - see entry under terminals

zellij
  - **no windows binary at the moment, as it uses some non-cross-platform libraries. can use it in WSL though!**
   - https://github.com/zellij-org/zellij/issues/316
  - currently doesn't work remotely? or just not as good session-handling as tmux
 - definitely better than windows terminal, see some of it's features:
   - https://zellij.dev/screencasts/
 - awesome-zellij has some plugins
   - https://github.com/zellij-org/awesome-zellij?tab=readme-ov-file
   - zellij-forgot, to show a searchable pop-up list of commands (very doom/helix-esque!)
   - zellij-jump-list, emacs-like
"extras/alacritty",

tmux
  - the linux classic
  - works well over ssh with great session-handling





# terminals
## "next gen", heavily reliant on ai-assistance, has more app features
warp
  - ai-heavy
  - includes an ide? a terminal?
  - closed-source, for-profit
    - has a free tier
  - rust
  - released in feb 2024 for linux (and mac), windows has a waitlist
  
x/fig
  - ai-heavy 
  - acquired by Amazon (now part of 'Amazon Q', a chatbot, for $20/month), along with the team now working for AWS
  - originally written in typescript, then ported to rust as the project went from desktop app to cli focus


## contemporary incarnations of classic terminals:
**wezterm**
  - **terminal with tmux features**, similar to windows terminal
    - reduces having one more config file
  - **lua config**
    - the config is simply a lua table!
    - beats the crap out of the windows terminal's generated .json file
    - **hot-reloads!**
  - **has a great appearance, similar to mac os terminals, with some algorithm for when to bold 'n brighten text**
  - **has a few major features**:
    - https://wezfurlong.org/wezterm/features.html
    - copy-mode/vi-mode and search-mode, like alacritty
    - **quick select-mode**
      - generates a selection of places in a text file to jump to, guessing the most common places to jump to
    - **remote hosts (for tabs and windows)**
    - ssh client built-in
      - wezterm ssh ra@my.server
    - connec to a serial port (for embedded devices: arduino)
    - image rendering
  - rust
    - and works on windows!!
  - wez is a cool name!
    - also, he isn't a crudgemuffin

windows terminal
  - actually legit, just works
    - includes pane-splitting (local), window transparency, and great font rendering!
  - config file sucks
    - it's auto-generated and it keeps moving things in the config file around! best not to alter the settings through the app, just edit the config file
    - shit way to set themes
      - must add whole color palletes to the single .json file
    - config'ing bindings is weird. must set default bindings to "not bind"? not sure..
    
**alacritty**
  - "a modern terminal emulator that comes with **sensible defaults**, but allows for extensive configuration."
    - very fish-like: **just works, no config needed**
  - "By integrating with other applications, rather than reimplementing their functionality..."
    - meant to combine your own terminal multiplexor (tmux, zellij), and other apps
      - considered great in combination with zellij
  - GPU-rendering via OpenGL
  - "vi mode"
    - fish's vi-mode only covers the prompt, this one's covers the entire buffer!
  - made with Rust
  - https://github.com/alacritty/alacritty

kitty
  - overview
    - https://sw.kovidgoyal.net/kitty/overview/#sessions
    - philosophies: keyboard power-user oriented, simple / modular / extensible / hackable, simple configs
    - tabs + windows
    - layouts / compositer
      - **i'm personally not sure about using learning kitty's layout system, over a geneal linux compositer...**
    - **remote control**
      - control other terminal windows
      - "More usefully, you can pipe the output of a command running in one window to another window, for example:"
        - ls | kitty @ send-text --match title:Output --stdin
          - this is nice, **instead of creating new windows and tabs all the time, just use one window for input, then output everything to other windows 'n tabs**
    - startup sessions
      - to **create workspaces**
        - maybe can even just save a workspace
    - a few built-in extensions
      - ssh from terminal made simpler
        - **i personally still think a ssh/sftp file manager GUI is much simpler**
        - "remote file"
          - ls --hyperlink=auto, brings up a few hyperlinked commands, just click to download, open in editor, etc.
        - transfer
          - kitty +kitten transfer /path/to/local/file /path/to/destination/on/remote/computer
          - kitty +kitten transfer file1 dir1 destination/
       - "broadcast"
         - broadcast input from one terminal to multiple other terminals
           - amazing for dev-ops, saving one from writing scripts
  - written in C
  - super scriptable: api to control it; open tab/window/etc.
  - super extensible: "kittens", written in python
  - **overall feels like a whole 'nother layer of customization and complexity**, which i'm just not ready for. I need simple sane defaults, not more customization!
  - developer is a crudgemuffin, lol


wayland DE only:
**foot**
  - "A fast, lightweight and minimalistic Wayland terminal emulator"
  - very fast
  - according to the maker of NotCurses tui lib, this one is awesome if you use Wayland
  - https://codeberg.org/dnkl/foot




https://www.reddit.com/r/archlinux/comments/n9noje/alacritty_vs_kitty/
  - didn't read through much, but in general it seems kitty > alacritty
  - foot is mentioned


